Autotest.add_hook :run_command do |autotest|
  alias :original_putc :putc

# Discard the unbuffered output
  def putc(obj)
  end
end

Autotest.add_hook :ran_command do |autotest|
#  alias :whatever :putc   # So Ruby does not warn about discarding putc
  alias :putc     :original_putc

  autotest.results.delete_if { |result| 
#    result =~ %r{^.*/usr/local/lib/.*\n?} 
    result =~ %r{^.*/usr/lib/.*\n?|.*/usr/lib/.*|.*/formtastic/vendor/plugins/.*} 
  }
  puts autotest.results.join
end

#require 'autotest/redgreen'

module Autotest::GnomeNotify

  # Time notification will be displayed before disappearing automatically
  EXPIRATION_IN_SECONDS = 2
  ERROR_STOCK_ICON = "gtk-dialog-error"
  SUCCESS_STOCK_ICON = "gtk-dialog-info"

  # Convenience method to send an error notification message
  #
  # [stock_icon]   Stock icon name of icon to display
  # [title]        Notification message title
  # [message]      Core message for the notification
  def self.notify stock_icon, title, message
    options = "-t #{EXPIRATION_IN_SECONDS * 1000} -i #{stock_icon}"
    system "notify-send #{options} '#{title}' '#{message}'"
  end

  Autotest.add_hook :red do |at|
    notify ERROR_STOCK_ICON, "Tests failed", "#{at.files_to_test.size} tests failed"
  end

  Autotest.add_hook :green do |at|
    notify SUCCESS_STOCK_ICON, "All tests passed, good job!", ""
  end

#  Autotest.add_hook :ran_command do |autotest|
#    autotest.results.gsub!(%r{^.*/usr/local/lib/.*\n?}, '')
#    autotest.results.gsub!(%r{^.*/usr/lib/.*\n?}, '')
#    autotest.results.gsub!(%r{^.*/vendor/plugins/rspec/.*\n?}, '')
#  end


end
